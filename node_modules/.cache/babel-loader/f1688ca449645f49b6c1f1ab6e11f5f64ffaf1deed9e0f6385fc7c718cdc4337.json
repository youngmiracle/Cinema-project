{"ast":null,"code":"var _jsxFileName = \"D:\\\\prog\\\\cinema\\\\Cinema-project\\\\src\\\\components\\\\pages\\\\Information\\\\Information.jsx\",\n  _s = $RefreshSig$();\nimport './information.css';\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function InformationPage() {\n  _s();\n  const [state, setState] = useState(null);\n  const callBackendAPI = async () => {\n    const response = await fetch('/contacts');\n    const body = await response.json();\n    if (response.status !== 200) {\n      throw Error(body.message);\n    }\n    return body;\n  };\n\n  // получение GET маршрута с сервера Express, который соответствует GET из server.js \n  useEffect(() => {\n    callBackendAPI().then(res => setState(res.express)).catch(err => console.log(err));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"infSection\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      style: {\n        textAlign: 'center',\n        color: 'white',\n        fontSize: '28px'\n      },\n      children: \"\\u0422\\u0443\\u0442 \\u0431\\u0443\\u0434\\u0435\\u0442 \\u0438\\u043D\\u0444\\u043E\\u0440\\u043C\\u0430\\u0446\\u0438\\u044F\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this), state]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 9\n  }, this);\n}\n_s(InformationPage, \"fkdfczwZ0ursGZj/fOecNSC7G+w=\");\n_c = InformationPage;\nvar _c;\n$RefreshReg$(_c, \"InformationPage\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","InformationPage","_s","state","setState","callBackendAPI","response","fetch","body","json","status","Error","message","then","res","express","catch","err","console","log","className","children","style","textAlign","color","fontSize","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/prog/cinema/Cinema-project/src/components/pages/Information/Information.jsx"],"sourcesContent":["import './information.css';\r\nimport React, { useEffect, useState } from 'react';\r\n\r\n\r\nexport function InformationPage (){\r\n    \r\n    \r\n    const [state, setState] = useState(null);\r\n\r\n    const callBackendAPI = async () => {\r\n      const response = await fetch('/contacts');\r\n      const body = await response.json();\r\n  \r\n      if (response.status !== 200) {\r\n        throw Error(body.message)\r\n      }\r\n      return body;\r\n    };\r\n    \r\n    // получение GET маршрута с сервера Express, который соответствует GET из server.js \r\n    useEffect(() => {\r\n      callBackendAPI()\r\n      .then(res => setState(res.express))\r\n      .catch(err => console.log(err));\r\n    }, [])\r\n  \r\n    return(\r\n        <section className=\"infSection\">\r\n            <h1 style={{\r\n                textAlign: 'center',\r\n                color: 'white',\r\n                fontSize: '28px'\r\n            }}>Тут будет информация</h1>\r\n            {state}\r\n        </section>\r\n    )\r\n}"],"mappings":";;AAAA,OAAO,mBAAmB;AAC1B,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAGnD,OAAO,SAASC,eAAeA,CAAA,EAAG;EAAAC,EAAA;EAG9B,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGN,QAAQ,CAAC,IAAI,CAAC;EAExC,MAAMO,cAAc,GAAG,MAAAA,CAAA,KAAY;IACjC,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,WAAW,CAAC;IACzC,MAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;IAElC,IAAIH,QAAQ,CAACI,MAAM,KAAK,GAAG,EAAE;MAC3B,MAAMC,KAAK,CAACH,IAAI,CAACI,OAAO,CAAC;IAC3B;IACA,OAAOJ,IAAI;EACb,CAAC;;EAED;EACAX,SAAS,CAAC,MAAM;IACdQ,cAAc,CAAC,CAAC,CACfQ,IAAI,CAACC,GAAG,IAAIV,QAAQ,CAACU,GAAG,CAACC,OAAO,CAAC,CAAC,CAClCC,KAAK,CAACC,GAAG,IAAIC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC,CAAC;EACjC,CAAC,EAAE,EAAE,CAAC;EAEN,oBACIjB,OAAA;IAASoB,SAAS,EAAC,YAAY;IAAAC,QAAA,gBAC3BrB,OAAA;MAAIsB,KAAK,EAAE;QACPC,SAAS,EAAE,QAAQ;QACnBC,KAAK,EAAE,OAAO;QACdC,QAAQ,EAAE;MACd,CAAE;MAAAJ,QAAA,EAAC;IAAoB;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAC3B1B,KAAK;EAAA;IAAAuB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAElB;AAAC3B,EAAA,CAhCeD,eAAe;AAAA6B,EAAA,GAAf7B,eAAe;AAAA,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}